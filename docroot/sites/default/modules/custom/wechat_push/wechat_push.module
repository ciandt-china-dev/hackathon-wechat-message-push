<?php

require_once __DIR__ . '/inc/wechat_push.inc';

/**
 * @file
 * wechat_push module.
 */

/**
 * Implements hook_menu().
 */
function wechat_push_menu() {
  $items['authorize'] = array(
    'page callback' => 'wechat_get_login_info',
    'access callback' => TRUE,
    'file' => 'inc/wechat_push.inc',
    'type' => MENU_CALLBACK,
  );
  $items['wechat/callback/%'] = array(
    'type' => MENU_CALLBACK,
    'file' => 'inc/wechat_push.inc',
    'page callback' => 'wechat_callback',
    'page arguments' => array(2),
    'access callback' => TRUE,
  );
  $items['wechat/app/%/auth'] = array(
    'type' => MENU_CALLBACK,
    'file' => 'inc/wechat_push.inc',
    'page callback' => 'wechat_get_access_token',
    'page arguments' => array(2),
    'access callback' => TRUE,
  );
  $items['wechatpush/settings'] = array(
    'title' => 'Wechat push settings',
    'description' => 'Wechat push settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('wechat_push_setting_form'),
    'access arguments' => array('common setting configuration'),
    'file' => 'inc/wechat_push.admin.inc',
    'type' => MENU_LOCAL_TASK,
  );
  $items['push'] = array(
    'page callback' => 'wechat_set_message',
    'access callback' => TRUE,
    'file' => 'inc/wechat_push.inc',
    'type' => MENU_CALLBACK,
  );
  $items['wechat/configure'] = array(
    'type' => MENU_CALLBACK,
    'file' => 'inc/wechat_push.inc',
    'page callback' => 'wechat_push_set_menu',
    'page arguments' => array(2),
    'access callback' => TRUE,
  );
  return $items;
}

/**
 * Implements hook_init().
 */
function wechat_push_init() {
  if (!wechat_push_check_requiremet()) {
    drupal_set_message(t('Requirements needed!'), 'error');
  }
}

/**
 * Check requirements as wechat configurations and so on.
 *
 * @return boolean
 */
function wechat_push_check_requiremet() {
  // @TODO Do some check here.

  return TRUE;
}

/**
 * Implements hook_entity_info().
 */
function wechat_push_entity_info() {
  $return = array(
    'wechat_app' => array(
      'label' => t('Wechat Application'),
      'plural label' => t('Wechat Applications'),
      'description' => t('An entity type to present Wechat application'),
      'entity class' => 'Entity',
      'controller class' => 'EntityAPIController',
      'base table' => 'wechat_app',
      'fieldable' => TRUE,
      'entity keys' => array(
        'id' => 'id',
        'label' => 'label',
//        'bundle' => 'name',
      ),
      // Make use the class' label() and uri() implementation by default.
      'label callback' => 'entity_class_label',
      'uri callback' => 'entity_class_uri',
//      'bundles' => array(),
//      'bundle keys' => array(
//        'bundle' => 'name',
//      ),
      'module' => 'wechat_push',
      // Enable the entity API's admin UI.
      'admin ui' => array(
        'path' => 'admin/structure/wechat',
        'file' => 'inc/wechat_push.admin.inc',
        'controller class' => 'EntityDefaultUIController',
      ),
      'access callback' => 'wechat_push_access',
    ),
  );

  return $return;
}

function wechat_push_access() {
  return TRUE;
}

function wechat_push_set_menu() {
  $menu = array(
    'button' => array(
      0 => array(
        'type' => 'view',
        'name' => 'Auth',
        'key' => 'gcal',
        "url" => 'http://vxiorffosa.localtunnel.me/wechat/gcalendar/auth'
      ),
    ),
  );
  $wechat_app = reset(entity_load('wechat_app', array(3)));
  $we_obj = _wechat_init_obj(3);
  $access_token = wechat_get_access_token(3);
  $we_obj->checkAuth('', '', $access_token);

  $we_obj->createMenu($menu, $wechat_app->agent_id);
}
